name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Semantic Version, e.g. MAJOR.MINOR.PATCH"
        required: true
        type: text

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set env
        run: |
          echo "OLD_VERSION="$(jq '.version' frontend/package.json) >> $GITHUB_ENV
          echo "NEW_VERSION="${{ github.event.inputs.version }} >> $GITHUB_ENV
          echo "BASE="$(git branch --show-current) >> $GITHUB_ENV
          echo "HEAD=version-bump-"${{ github.event.inputs.version }} >> $GITHUB_ENV

      - name: Validate version and branch
        run: |
          IFS=. read major minor patch <<< ${{ env.NEW_VERSION }}
          echo "${{ env.NEW_VERSION }}: ${{ env.BASE }} == hotfix/v$major.$minor.x"
          if [[ ${{ env.NEW_VERSION }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            if ! [[ ${{ env.BASE }} =~ ^hotfix\/v$major.$minor.x$ ]]; then
              echo "${{ env.BASE }}: Version must match the chosen hotfix branch" >&2; exit 1
            fi
          elif [[ ${{ env.NEW_VERSION }} =~ ^[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+$ ]]; then
            if ! [[ ${{ env.BASE }} =~ ^test$ ]]; then
              echo "${{ env.BASE }}: For release candidate, you must choose the test branch" >&2; exit 1
            fi
          else
            echo "${{ env.NEW_VERSION }} is not a semantic version number" >&2; exit 1
          fi

      - name: Set actor
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          # - name: Create hotfix branch from test
          #   run: |
          #     IFS=. read major minor patch <<< ${{ env.NEW_VERSION }}
          #     git switch test
          #     git pull
          #     git switch -C hotfix/v$major.$minor.x
          #     git push -u origin HEAD

      - name: Create pull request branch
        run: |
          git pull --rebase
          git switch -c ${{ env.HEAD }}

      - name: Push version update
        run: |
          for i in **/package.json; do jq '.version = "${{ env.NEW_VERSION }}"' $i > tmp.json && mv tmp.json $i; done
          git add */package.json
          git commit -m "Version bump ${{ env.OLD_VERSION }} -> ${{ env.NEW_VERSION }}"
          git push -u origin HEAD
          git switch ${{ env.BASE }}

      - name: Create pull request
        run: |
          prRef="$(gh pr create --head ${{ env.HEAD }} --base ${{ env.BASE }} --fill --no-maintainer-edit)"
          echo "PR_REF="$prRef >> $GITHUB_ENV 
          sleep 3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge pull request
        run: |
          gh pr merge ${{ env.PR_REF }} --merge --auto --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
