name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Semantic Version Number, e.g. MAJOR.MINOR.PATCH"
        required: true
        type: text

jobs:
  bump-version:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/hotfix/v') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get versions
        run: |
          echo "OLD_VERSION="$(jq '.version' frontend/package.json) >> $GITHUB_ENV
          echo "NEW_VERSION="${{ github.event.inputs.version }} >> $GITHUB_ENV

      - name: Create commits
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          echo $(git branch --show-current)
          git pull --rebase
          git switch -c version-bump-${{ env.NEW_VERSION }}
          jq '.version = "${{ env.NEW_VERSION }}"' frontend/package.json > tmp.json && mv tmp.json frontend/package.json
          jq '.version = "${{ env.NEW_VERSION }}"' vue-frontend/package.json > tmp.json && mv tmp.json vue-frontend/package.json
          jq '.version = "${{ env.NEW_VERSION }}"' ezapp/package.json > tmp.json && mv tmp.json ezapp/package.json
          git add */package.json
          git commit -m "Version bump ${{ env.OLD_VERSION }} -> ${{ env.NEW_VERSION }}"
          git push -u origin HEAD

      - name: Create Pull Request
        run: |
          prRef="$(gh pr create --fill)"
          echo "PR_REF="$prRef >> $GITHUB_ENV 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge Pull Request
        run: |
          gh pr merge ${{ env.PR_REF }} --auto --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
