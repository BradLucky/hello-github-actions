name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Semantic Version, e.g. MAJOR.MINOR.PATCH[-rc.#]"
        required: true
        type: string

jobs:
  bump-version:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set env
        run: |
          echo "OLD_VERSION="$(cat .version | tr -d '\n') >> $GITHUB_ENV
          echo "NEW_VERSION="${{ github.event.inputs.version }} >> $GITHUB_ENV
          echo "BASE="$(git branch --show-current) >> $GITHUB_ENV
          echo "HEAD=version-bump-"${{ github.event.inputs.version }} >> $GITHUB_ENV
          echo "MERGE="${{ github.event.inputs.version }}"-to-dev" >> $GITHUB_ENV

      - name: Set actor
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Create pull request branch
        run: |
          git pull --rebase
          git switch -c ${{ env.HEAD }}

      - name: Push version update
        run: |
          echo ${{ env.NEW_VERSION }} > .version
          git add .version
          git commit -m "chore: version bump ${{ env.OLD_VERSION }} -> ${{ env.NEW_VERSION }}"
          git push -u origin HEAD
          git switch ${{ env.BASE }}

      - name: Create pull request
        run: |
          prRef="$(gh pr create --head ${{ env.HEAD }} --base ${{ env.BASE }} --title "Version bump ${{ env.OLD_VERSION }} -> ${{ env.NEW_VERSION }}" --fill --no-maintainer-edit)"
          echo "PR_REF="$prRef >> $GITHUB_ENV
          sleep 3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge pull request
        run: |
          gh pr merge ${{ env.PR_REF }} --merge --auto --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR to merge back to Development
        run: |
          git fetch --unshallow
          git switch development
          git pull --rebase
          git switch -c ${{ env.MERGE }}
          git merge --no-ff ${{ env.BASE }} --commit -m "Merge ${{ env.NEW_VERSION }} -> development"
          git push --set-upstream origin ${{ env.MERGE }}
          gh pr create --head ${{ env.MERGE }} --base development --title "Merge ${{ env.NEW_VERSION }} -> development" --fill
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
